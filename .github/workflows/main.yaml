# name: running-test-build-image-push-image-to-docker-hub-deploy-to-vps

# on:
#   push:
#     branches: [main]

# jobs:
#   running-test:
#     name: Running Test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: "1.20"
#       - name: Run Test
#         run: go test ./... -cover

#   build-image:
#     name: Build Image
#     runs-on: ubuntu-latest
#     needs: running-test
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Build Image
#         run: docker build -t aditnugroho/greenvote:latest .
#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Push Image
#         run: docker push aditnugroho/greenvote:latest

#   deploy-to-ec2:
#     name: Deploy To EC2
#     needs: build-image
#     runs-on: ubuntu-latest
#     steps:
#       - name: Configure SSH
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USER }}
#           key: ${{ secrets.SSH_KEY }}
#           script: |
#             cd /home/ec2-user/greenvote
#             docker stop greenvote || true && docker rm greenvote || true
#             docker pull aditnugroho/greenvote:latest
#             docker run -d --name greenvote -p 80:1323 aditnugroho/greenvote:latest
#             touch .env && \
#             echo ${{ secrets.DB_HOST }} > .env && \
#             echo ${{ secrets.DB_NAME }} >> .env && \
#             echo ${{ secrets.DB_USERNAME }} >> .env && \
#             echo ${{ secrets.DB_PASSWORD }} >> .env && \
#             echo ${{ secrets.DB_PORT }} >> .env && \
#             echo ${{ secrets.ACCESS_TOKEN_SECRET }} >> .env && \
#             echo ${{ secrets.REFRESH_TOKEN_SECRET }} >> .env && \
#             echo ${{ secrets.MAPS_GEOCODING_URL }} >> .env && \
#             echo ${{ secrets.MAPS_IMAGERY_URL }} >> .env && \
#             echo ${{ secrets.MAPS_API_KEY }} >> .env && \
#             echo ${{ secrets.WEATHER_API_KEY }} >> .env && \
#             echo ${{ secrets.WEATHER_API_URL }} >> .env && \
#             echo ${{ secrets.CLOUDINARY_URL }} >> .env
#             docker cp .env greenvote:/
#             docker restart greenvote