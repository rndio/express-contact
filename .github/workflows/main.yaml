on:
  push:
    branches:
      - main

name: Auto Deploy Docker
jobs:
  build-image:
    name: Build n Push Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Build Image
        run: docker build -t rndio/express-contact:latest .
      - name: Login to DockerHub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Image to DockerHub
        run: docker push rndio/express-contact:latest
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Configure SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker container stop express-contact-testing || true
            docker container rm express-contact-testing || true
            docker container stop express-contact || true
            docker container rm express-contact || true
            docker pull rndio/express-contact:latest
            mkdir -p /home/app/express-contact
            touch /home/app/express-contact/.env && echo "DATABASE_URL=mysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}_test" > /home/app/express-contact/.env
            docker run -d --name express-contact-testing --env-file /home/app/express-contact/.env -p 5000:5000 rndio/express-contact:latest
            rm /home/app/express-contact/.env
            docker exec express-contact-testing npm run test
  deploy-to-production:
    name: Deploy To Production
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Configure SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker container stop express-contact-testing || true
            docker container rm express-contact-testing || true
            docker container stop express-contact || true
            docker container rm express-contact || true
            touch /home/app/express-contact/.env && echo "DATABASE_URL=mysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}" > /home/app/express-contact/.env
            docker run -d --name express-contact --env-file /home/app/express-contact/.env -p 5000:5000 rndio/express-contact:latest
            rm /home/app/express-contact/.env
  
